function HoveringDiv() {
  const [isHovered, setIsHovered] = useState(false);
  const divRef = useRef(null);

  useEffect(() => {
    const handleScroll = () => {
      const divRect = divRef.current.getBoundingClientRect();
      const windowHeight = window.innerHeight;

      if (
        divRect.top >= 0 &&
        divRect.bottom <= windowHeight &&
        !isHovered
      ) {
        setIsHovered(true);
      } else {
        setIsHovered(false);
      }
    };

    window.addEventListener('scroll', handleScroll);

    return () => {
      window.removeEventListener('scroll', handleScroll);
    };
  }, [isHovered]);

  const handleMouseEnter = () => {
    setIsHovered(true);
    divRef.current.style.transform = 'translateY(-50%)';
  };

  const handleMouseLeave = () => {
    setIsHovered(false);
    divRef.current.style.transform = 'translateY(0)';
  };

  return (
    <div
      ref={divRef}
      className={`main flex ${isHovered ? 'hovered' : ''}`}
      onMouseEnter={handleMouseEnter}
      onMouseLeave={handleMouseLeave}
    >
      {/* Your content here */}
    </div>
  );
}

export default HoveringDiv;